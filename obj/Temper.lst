C251 COMPILER V5.60.0,  Temper                                                             30/05/23  15:37:48  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE Temper
OBJECT MODULE PLACED IN .\obj\Temper.obj
COMPILER INVOKED BY: D:\KeilMDK\C251\BIN\C251.EXE Temperaturn\Temper.c XSMALL OPTIMIZE(0,SPEED) BROWSE INCDIR(.\Ads1110;
                    -.\Flash;.\mcp4725;.\IIC;.\MwPro;.\Uart;.\Lcd;.\ModBus;.\Temperaturn) PRINT(.\obj\Temper.lst) OBJECT(.\obj\Temper.obj) 

stmt  level    source

    1          #include "main.h"
    2          #include "Temper.h"
    3          #include "Lcd.h"
    4          #include "LcdApp.h"
    5          #include "uart.h"
    6          
    7          uint TEMPER = 0;
    8          uint TEMPER_Val = 0;
    9          
   10          //上为ADC采样值，下方左为温度值，右为数组标号
   11          uint code temp_table[]={
   12          
   13              140,      149,    159,    168,    178,    188,
   14              //-40 0   -39 1   -38 2   -37 3   -36 4   -35 5
   15              199,      210,    222,    233,    246,    259,
   16              //-34 6   -33 7   -32 8   -31 9   -30 10  -29 11
   17              272,      286,    301,    317,    333,    349, 
   18              //-28 12  -27 13  -26  14 -25  15 -24  16 -23  17
   19              367,      385,    403,    423,    443,    464,
   20              //-22 18  -21 19  -20 20  -19 21  -18 22  -17 23
   21              486,      509,    533,    558,    583,    610,  
   22              //-16 24  -15 25  -14 26  -13 27  -12 28  -11 29
   23              638,      667,    696,    727,    758,    791,
   24              //-10 30  -9  31  -8  32  -7  33  -6  34  -5  35
   25              824,      858,    893,    929,    965,    1003, 
   26              //-4  36  -3  37  -2  38  -1  39  0   40  1   41
   27              1041,     1080,   1119,   1160,   1201,   1243,
   28              //2   42  3   43  4   44  5   45  6   46  7   47
   29              1285,     1328,   1371,   1414,   1459,   1503,
   30              //8   48  9   49  10  50  11  51  12  52  13  53
   31              1548,     1593,   1638,   1684,   1730,   1775,
   32              //14  54  15  55  16  56  17  57  18  58  19  59
   33              1821,     1867,   1912,   1958,   2003,   2048,
   34              //20  60  21  61  22  62  23  63  24  64  25  65
   35              2093,     2137,   2182,   2225,   2269,   2312,
   36              //26  66  27  67  28  68  29  69  30  70  31  71
   37              2354,     2397,   2438,   2479,   2519,   2559,
   38              //32  72  33  73  34  74  35  75  36  76  37  77
   39              2598,     2637,   2675,   2712,   2748,   2784,
   40              //38  78  39  79  40  80  41  81  42  82  43  83
   41              2819,     2853,   2887,   2920,   2952,   2984,
   42              //44  84  45  85  46  86  47  87  48  88  49  89
   43              3014,     3044,   3073,   3102,   3130,   3157,
   44              //50  90  51  91  52  92  53  93  54  94  55  95
   45              3183,     3209,   3234,   3259,   3283,   3306,
   46              //56  96  57  97  58  98  59  99  60  100 61  101
   47              3328,     3351,   3372,   3393,   3413,   3432,
   48              //62  102 63  103 64  104 65  105 66  106 67  107
   49              3452,     3470,   3488,   3506,   3523,   3539,
   50              //68  108 69  109 70  110 71  111 72  112 73  113
   51              3555,     3571,   3586,   3601,   3615,   3628,
   52              //74  114 75  115 76  116 77  117 78  118 79  119
   53              3642,     3655,   3667,   3679,   3691,   3702, 
   54              //80  120 81  121 82  122 83  123 84  124 85  125
   55              3714,     3724,   3735,   3745,   3754,   3764,
   56              //86  126 87  127 88  128 89  129 90  130 91  131
   57              3773,     3782,   3791,   3799,   3807,   3815,
   58              //92  132 93  133 94  134 95  135 96  136 97  137
C251 COMPILER V5.60.0,  Temper                                                             30/05/23  15:37:48  PAGE 2   

   59              3822,     3830,   3837,   3844,   3850,   3857, 
   60              //98  138 99  139 100 140 101 141 102 142 103 143
   61              3863,     3869,   3875,   3881,   3887,   3892,
   62              //104 144 105 145 106 146 107 147 108 148 109 149
   63              3897,     3902,   3907,   3912,   3917,   3921,
   64              //110 150 111 151 112 152 113 153 114 154 115 155
   65              3926,     3930,   3934,   3938,   3942 
   66              //116 156 117 157 118 158 119 159 120 160
   67              };
   68          
   69          void Adc_Init()
   70          {
   71   1          P_SW2 |= 0x80;
   72   1          ADCTIM = 0x3f;      //设置 ADC 内部时序，ADC采样时间建议设最大值
   73   1          ADCCFG = 0x2f;      //设置 ADC 时钟为系统时钟/2/16/16
   74   1          ADC_CONTR = 0x80;   //使能 ADC 模块
   75   1          _nop_();
   76   1          _nop_();
   77   1          
   78   1      }
   79          
   80          
   81          int Get_Temperature(uint adc)
   82          {
   83   1          int i;
   84   1          uint code *p;
   85   1          p = temp_table;
   86   1          if((adc >= p[0]) && (adc <= p[160]))
   87   1          {
   88   2              for(i=0;i<160;i++)
   89   2              {
   90   3                  if(adc <= p[i])
   91   3                  {
   92   4                      i = i-1;
   93   4                      return (i - 40);
   94   4                  }
   95   3              }
   96   2          }
   97   1          return (-40);
   98   1      
   99   1      }
  100          
  101          uint Get_ADC12bitResult(u8 channel)  //channel = 0~15
  102          {
  103   1          uint tem = 0;
  104   1          ADC_RES = 0;
  105   1          ADC_RESL = 0;
  106   1      
  107   1          ADC_CONTR = (ADC_CONTR & 0xe0) | 0x40 | channel;    //启动 AD 转换
  108   1          _nop_();
  109   1          _nop_();
  110   1          _nop_();
  111   1          _nop_();
  112   1          _nop_();
  113   1          
  114   1          while(!ADC_FLAG)
  115   1      
  116   1          {
  117   2              ;
  118   2          }
  119   1          ADC_FLAG = 0;   //清除ADC结束标志
  120   1          tem = ((uint)(ADC_RES << 8)) | ADC_RESL ;
  121   1          return  tem;
  122   1      }
  123          
  124          
C251 COMPILER V5.60.0,  Temper                                                             30/05/23  15:37:48  PAGE 3   

  125          void ADC_Temp()
  126          {
  127   1          TEMPER = Get_ADC12bitResult(3);       //参数0~15,查询方式做一次ADC, 返回值就是结果, == 4096 为错误
  128   1          TEMPER =  Get_Temperature(TEMPER);    //计算温度值
  129   1      
  130   1          TEMPER *= 10; 
  131   1          TEMPER_Val =TEMPER;
  132   1          
  133   1          //ShowTemp(TEMPER_Val);
  134   1      
  135   1          if (RunStatus.Running)
  136   1          {
  137   2              if(TEMPER_Val > 300)
  138   2              {
  139   3                  g_Output[EX_FAN] = 1;
  140   3              }
  141   2              
  142   2              if(TEMPER_Val < 260)
  143   2              {
  144   3                  g_Output[EX_FAN] = 0;
  145   3              }
  146   2          }
  147   1          else
  148   1          {
  149   2              g_Output[EX_FAN] = 0;
  150   2          }
  151   1      }
  152          
  153          
  154          
  155          
  156          
  157          
  158          
  159          
  160          
  161          
  162          
  163          
  164          
  165          
  166          
  167          
  168          
  169          
  170          
  171          
  172          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       643     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        13     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
C251 COMPILER V5.60.0,  Temper                                                             30/05/23  15:37:48  PAGE 4   

  hconst size          =        12     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
